@page "/default.aspx/dmm/check-out"
@page "/default.aspx/dmm/check-out/{filter}"
@using Workers;
@using Models;

@if (authorized)
{
    <p class="heading">Check-Out (DMM)</p>

    <div class="col-lg-6">
        <label>Filter</label>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <NavLink class="breadcrumb-item" href="default.aspx/jed/check-out/Employee">Employee</NavLink>
                <NavLink class="breadcrumb-item" href="default.aspx/jed/check-out/Non-Employee">Non-Employee</NavLink>
            </ol>
        </nav>
    </div>
    <br />

    <CheckOut Filter="@Filter" Region="Dammam"></CheckOut>
}
else
{
    <NotAutorized></NotAutorized>
}
@code {
    [Parameter]
    public string Filter { get; set; }
    private bool authorized = true;

    protected override async Task OnInitializedAsync()
    {
        if (!await AuthorizedAsync(Configuration["DmmOpGroup"]))
            authorized = false;
        else
            authorized = true;
        StateHasChanged();
    }

    private async Task<bool> AuthorizedAsync(string assignTo)
    {
        var groups = await SPTools.GetMyGroupsAsync(Navigator.BaseUri,Configuration["BaseURL"]);
        if (groups != null)
        {
            foreach (Group group in groups)
            {
                if (group.LoginName.Equals(assignTo))
                {
                    //authorized
                    return true;
                }
            }
            //unauthorized
            return false;
        }
        else
        {
            //unauthorized
            return false;
        }
    }
}